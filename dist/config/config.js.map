{"version":3,"sources":["../../src/config/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import configTemplate from './config.html!text';\n\nimport _ from 'lodash' ;\n\nclass KentikConfigCtrl {\n  constructor($scope, $injector, backendSrv) {\n    this.backendSrv = backendSrv;\n\n    this.appEditCtrl.setPreUpdateHook(this.preUpdate.bind(this));\n    this.appEditCtrl.setPostUpdateHook(this.postUpdate.bind(this));\n\n    if (!this.appModel.jsonData) {\n      this.appModel.jsonData = {};\n    }\n    if (!this.appModel.secureJsonData) {\n      this.appModel.secureJsonData = {};\n    }\n    this.apiValidated = false;\n    this.apiError = false;\n    if (this.appModel.enabled && this.appModel.jsonData.tokenSet) {\n      this.validateApiConnection();\n    }\n  }\n\n  preUpdate() {\n    if (this.appModel.secureJsonData.token)  {\n      this.appModel.jsonData.tokenSet = true;\n    }\n\n    return this.initDatasource();\n  }\n\n  postUpdate() {\n    if (!this.appModel.enabled) {\n      return Promise.resolve();\n    }\n    var self = this;\n    return this.validateApiConnection().then(() => {\n      return self.appEditCtrl.importDashboards().then(() => {\n        return {\n          url: \"dashboard/db/kentik-home\",\n          message: \"Kentik Connect Pro app installed!\"\n        };\n      });\n    });\n  }\n\n  // make sure that we can hit the Kentik API.\n  validateApiConnection() {\n    var self = this;\n    var promise = this.backendSrv.get('/api/plugin-proxy/kentik-app/api/v1/user/list');\n    promise.then(() => {\n      self.apiValidated = true;\n    }, () => {\n      self.apiValidated = false;\n      self.apiError = true;\n    });\n    return promise;\n  }\n\n  reset() {\n    this.appModel.jsonData.email = '';\n    this.appModel.jsonData.tokenSet = false;\n    this.appModel.secureJsonData = {};\n    this.apiValidated = false;\n  }\n\n  initDatasource() {\n    var self = this;\n    //check for existing datasource.\n    return self.backendSrv.get('/api/datasources').then(function(results) {\n      var foundKentic = false;\n      _.forEach(results, function(ds) {\n        if (foundKentic) { return; }\n        if (ds.name === \"kentik\") {\n          foundKentic = true;\n        }\n      });\n      var promises = [];\n      if (!foundKentic) {\n        // create datasource.\n        var kentik = {\n          name: 'kentik',\n          type: 'kentik-ds',\n          access: 'direct',\n          jsonData: {}\n        };\n        promises.push(self.backendSrv.post('/api/datasources', kentik));\n      }\n      return Promise.all(promises);\n    });\n  }\n}\n\nKentikConfigCtrl.template = configTemplate;\n\nexport {\n  KentikConfigCtrl as ConfigCtrl\n};\n\n"]}