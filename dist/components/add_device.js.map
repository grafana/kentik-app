{"version":3,"sources":["../../src/components/add_device.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAO,O;;AACA,a;;;;;;;;;;;;;;;;;;;;;AAEH,c,GAAW;AACb,qBAAa,EADA;AAEb,cAAM,QAFO;AAGb,4BAAoB,EAHP;AAIb,mBAAW,OAJE;AAKb,mBAAW,CALE;AAMb,mBAAW,EANE;AAOb,uBAAe,KAPF;AAQb,mBAAW,EARE;AASb,wBAAgB;AATH,O;;+BAYF,a;;;AAEX,+BAAY,MAAZ,EAAoB,SAApB,EAA+B,SAA/B,EAA0C,UAA1C,EAAsD,QAAtD,EAAgE;AAAA;;AAC9D,eAAK,UAAL,GAAkB,UAAlB;AACA,eAAK,QAAL,GAAgB,QAAhB;AACA,eAAK,SAAL,GAAiB,SAAjB;AACA,eAAK,MAAL,GAAc,QAAQ,IAAR,CAAa,QAAb,CAAd;AACA,eAAK,SAAL,GAAiB,CAAC,EAAC,IAAI,EAAL,EAAD,CAAjB;AACD;;;;kCAEO;AACN,iBAAK,SAAL,CAAe,IAAf,CAAoB,EAAC,IAAI,EAAL,EAApB;AACD;;;mCAEQ,K,EAAO;AACd,iBAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EAA6B,CAA7B;AACD;;;sCAEW;AAAA;;AACV,gBAAI,OAAO,IAAX;AACA,gBAAI,MAAM,EAAV;AACA,cAAE,OAAF,CAAU,KAAK,SAAf,EAA0B,UAAS,EAAT,EAAa;AACrC,kBAAI,IAAJ,CAAS,GAAG,EAAZ;AACD,aAFD;AAGA,iBAAK,MAAL,CAAY,SAAZ,GAAwB,IAAI,IAAJ,EAAxB;AACA,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,mDAArB,EAA0E,KAAK,MAA/E,EAAuF,IAAvF,CAA4F,UAAC,IAAD,EAAU;AACpG,kBAAI,SAAS,IAAb,EAAmB;AACjB,sBAAK,QAAL,CAAc,GAAd,CAAkB,oBAAlB,EAAwC,KAAK,GAA7C,EAAkD,OAAlD;AACD,eAFD,MAEO;AACL,qBAAK,SAAL,CAAe,GAAf,CAAmB,sCAAnB;AACD;AACF,aAND;AAOD;;;;;;;;AAGH,oBAAc,WAAd,GAA4B,4BAA5B","file":"add_device.js","sourcesContent":["import _ from 'lodash';\nimport angular from 'angular';\n\nvar defaults = {\n  device_name: '',\n  type: 'router',\n  device_description: '',\n  flow_type: 'sflow',\n  flow_rate: 5,\n  other_ips: '',\n  minimize_snmp: false,\n  device_ip: '',\n  snmp_community: ''\n};\n\nexport class AddDeviceCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, $location, backendSrv, alertSrv) {\n    this.backendSrv = backendSrv;\n    this.alertSrv = alertSrv;\n    this.$location = $location;\n    this.device = angular.copy(defaults);\n    this.other_ips = [{ip: ''}];\n  }\n\n  addIP() {\n    this.other_ips.push({ip: ''});\n  }\n\n  removeIP(index) {\n    this.other_ips.splice(index, 1);\n  }\n\n  addDevice() {\n    var self = this;\n    var ips = [];\n    _.forEach(this.other_ips, function(ip) {\n      ips.push(ip.ip);\n    });\n    this.device.other_ips = ips.join();\n    this.backendSrv.post(\"/api/plugin-proxy/kentik-app/api/v1/device/create\", this.device).then((resp) => {\n      if ('err' in resp) {\n        this.alertSrv.set(\"Device Add failed.\", resp.err, 'error');\n      } else {\n        self.$location.url(\"/plugins/kentik-app/page/device-list\");\n      }\n    });\n  }\n}\n\nAddDeviceCtrl.templateUrl = 'components/add_device.html';\n"]}